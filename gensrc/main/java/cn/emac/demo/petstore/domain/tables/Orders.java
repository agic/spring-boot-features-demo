/*
 * This file is generated by jOOQ.
*/
package cn.emac.demo.petstore.domain.tables;


import cn.emac.demo.petstore.domain.Jpetstore;
import cn.emac.demo.petstore.domain.Keys;
import cn.emac.demo.petstore.domain.tables.records.OrdersRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Cadastro de pedidos
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Orders extends TableImpl<OrdersRecord> {

    private static final long serialVersionUID = 1198091240;

    /**
     * The reference instance of <code>jpetstore.orders</code>
     */
    public static final Orders ORDERS = new Orders();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrdersRecord> getRecordType() {
        return OrdersRecord.class;
    }

    /**
     * The column <code>jpetstore.orders.orderid</code>.
     */
    public final TableField<OrdersRecord, Integer> ORDERID = createField("orderid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.userid</code>.
     */
    public final TableField<OrdersRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.orderdate</code>.
     */
    public final TableField<OrdersRecord, Date> ORDERDATE = createField("orderdate", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.shipaddr1</code>.
     */
    public final TableField<OrdersRecord, String> SHIPADDR1 = createField("shipaddr1", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.shipaddr2</code>.
     */
    public final TableField<OrdersRecord, String> SHIPADDR2 = createField("shipaddr2", org.jooq.impl.SQLDataType.VARCHAR.length(80), this, "");

    /**
     * The column <code>jpetstore.orders.shipcity</code>.
     */
    public final TableField<OrdersRecord, String> SHIPCITY = createField("shipcity", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.shipstate</code>.
     */
    public final TableField<OrdersRecord, String> SHIPSTATE = createField("shipstate", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.shipzip</code>.
     */
    public final TableField<OrdersRecord, String> SHIPZIP = createField("shipzip", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.shipcountry</code>.
     */
    public final TableField<OrdersRecord, String> SHIPCOUNTRY = createField("shipcountry", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.billaddr1</code>.
     */
    public final TableField<OrdersRecord, String> BILLADDR1 = createField("billaddr1", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.billaddr2</code>.
     */
    public final TableField<OrdersRecord, String> BILLADDR2 = createField("billaddr2", org.jooq.impl.SQLDataType.VARCHAR.length(80), this, "");

    /**
     * The column <code>jpetstore.orders.billcity</code>.
     */
    public final TableField<OrdersRecord, String> BILLCITY = createField("billcity", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.billstate</code>.
     */
    public final TableField<OrdersRecord, String> BILLSTATE = createField("billstate", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.billzip</code>.
     */
    public final TableField<OrdersRecord, String> BILLZIP = createField("billzip", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.billcountry</code>.
     */
    public final TableField<OrdersRecord, String> BILLCOUNTRY = createField("billcountry", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.courier</code>.
     */
    public final TableField<OrdersRecord, String> COURIER = createField("courier", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.totalprice</code>.
     */
    public final TableField<OrdersRecord, BigDecimal> TOTALPRICE = createField("totalprice", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.billtofirstname</code>.
     */
    public final TableField<OrdersRecord, String> BILLTOFIRSTNAME = createField("billtofirstname", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.billtolastname</code>.
     */
    public final TableField<OrdersRecord, String> BILLTOLASTNAME = createField("billtolastname", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.shiptofirstname</code>.
     */
    public final TableField<OrdersRecord, String> SHIPTOFIRSTNAME = createField("shiptofirstname", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.shiptolastname</code>.
     */
    public final TableField<OrdersRecord, String> SHIPTOLASTNAME = createField("shiptolastname", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.creditcard</code>.
     */
    public final TableField<OrdersRecord, String> CREDITCARD = createField("creditcard", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.exprdate</code>.
     */
    public final TableField<OrdersRecord, String> EXPRDATE = createField("exprdate", org.jooq.impl.SQLDataType.VARCHAR.length(7).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.cardtype</code>.
     */
    public final TableField<OrdersRecord, String> CARDTYPE = createField("cardtype", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>jpetstore.orders.locale</code>.
     */
    public final TableField<OrdersRecord, String> LOCALE = createField("locale", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * Create a <code>jpetstore.orders</code> table reference
     */
    public Orders() {
        this("orders", null);
    }

    /**
     * Create an aliased <code>jpetstore.orders</code> table reference
     */
    public Orders(String alias) {
        this(alias, ORDERS);
    }

    private Orders(String alias, Table<OrdersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Orders(String alias, Table<OrdersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Cadastro de pedidos");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jpetstore.JPETSTORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OrdersRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ORDERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrdersRecord> getPrimaryKey() {
        return Keys.KEY_ORDERS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrdersRecord>> getKeys() {
        return Arrays.<UniqueKey<OrdersRecord>>asList(Keys.KEY_ORDERS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Orders as(String alias) {
        return new Orders(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Orders rename(String name) {
        return new Orders(name, null);
    }
}
