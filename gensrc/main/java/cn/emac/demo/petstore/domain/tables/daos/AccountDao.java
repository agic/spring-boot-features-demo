/*
 * This file is generated by jOOQ.
*/
package cn.emac.demo.petstore.domain.tables.daos;


import cn.emac.demo.petstore.domain.tables.Account;
import cn.emac.demo.petstore.domain.tables.records.AccountRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * Cadastro de Contas
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AccountDao extends DAOImpl<AccountRecord, cn.emac.demo.petstore.domain.tables.pojos.Account, String> {

    /**
     * Create a new AccountDao without any configuration
     */
    public AccountDao() {
        super(Account.ACCOUNT, cn.emac.demo.petstore.domain.tables.pojos.Account.class);
    }

    /**
     * Create a new AccountDao with an attached configuration
     */
    @Autowired
    public AccountDao(Configuration configuration) {
        super(Account.ACCOUNT, cn.emac.demo.petstore.domain.tables.pojos.Account.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.emac.demo.petstore.domain.tables.pojos.Account object) {
        return object.getUserid();
    }

    /**
     * Fetch records that have <code>userid IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Account> fetchByUserid(String... values) {
        return fetch(Account.ACCOUNT.USERID, values);
    }

    /**
     * Fetch a unique record that has <code>userid = value</code>
     */
    public cn.emac.demo.petstore.domain.tables.pojos.Account fetchOneByUserid(String value) {
        return fetchOne(Account.ACCOUNT.USERID, value);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Account> fetchByEmail(String... values) {
        return fetch(Account.ACCOUNT.EMAIL, values);
    }

    /**
     * Fetch records that have <code>firstname IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Account> fetchByFirstname(String... values) {
        return fetch(Account.ACCOUNT.FIRSTNAME, values);
    }

    /**
     * Fetch records that have <code>lastname IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Account> fetchByLastname(String... values) {
        return fetch(Account.ACCOUNT.LASTNAME, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Account> fetchByStatus(String... values) {
        return fetch(Account.ACCOUNT.STATUS, values);
    }

    /**
     * Fetch records that have <code>addr1 IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Account> fetchByAddr1(String... values) {
        return fetch(Account.ACCOUNT.ADDR1, values);
    }

    /**
     * Fetch records that have <code>addr2 IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Account> fetchByAddr2(String... values) {
        return fetch(Account.ACCOUNT.ADDR2, values);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Account> fetchByCity(String... values) {
        return fetch(Account.ACCOUNT.CITY, values);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Account> fetchByState(String... values) {
        return fetch(Account.ACCOUNT.STATE, values);
    }

    /**
     * Fetch records that have <code>zip IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Account> fetchByZip(String... values) {
        return fetch(Account.ACCOUNT.ZIP, values);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Account> fetchByCountry(String... values) {
        return fetch(Account.ACCOUNT.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<cn.emac.demo.petstore.domain.tables.pojos.Account> fetchByPhone(String... values) {
        return fetch(Account.ACCOUNT.PHONE, values);
    }
}
